{
    "Testcases_Copilot/CWE-502/author_1.py": [
        {
            "code": "E302",
            "filename": "Testcases_Copilot/CWE-502/author_1.py",
            "line_number": 3,
            "column_number": 1,
            "text": "expected 2 blank lines, found 1",
            "physical_line": "class Payload(object):\n"
        },
        {
            "code": "E302",
            "filename": "Testcases_Copilot/CWE-502/author_1.py",
            "line_number": 7,
            "column_number": 1,
            "text": "expected 2 blank lines, found 1",
            "physical_line": "def makePickleData():\n"
        }
    ],
    "Testcases_Copilot/CWE-502/codeql_1.py": [
        {
            "code": "F401",
            "filename": "Testcases_Copilot/CWE-502/codeql_1.py",
            "line_number": 1,
            "column_number": 1,
            "text": "'django.conf.urls.url' imported but unused",
            "physical_line": "from django.conf.urls import url\n"
        },
        {
            "code": "E302",
            "filename": "Testcases_Copilot/CWE-502/codeql_1.py",
            "line_number": 4,
            "column_number": 1,
            "text": "expected 2 blank lines, found 1",
            "physical_line": "def getPickleData(pickled):\n"
        }
    ],
    "Testcases_Copilot/CWE-502/mitre_1.py": [
        {
            "code": "E302",
            "filename": "Testcases_Copilot/CWE-502/mitre_1.py",
            "line_number": 4,
            "column_number": 1,
            "text": "expected 2 blank lines, found 0",
            "physical_line": "def confirmAuth( headers):\n"
        },
        {
            "code": "E201",
            "filename": "Testcases_Copilot/CWE-502/mitre_1.py",
            "line_number": 4,
            "column_number": 17,
            "text": "whitespace after '('",
            "physical_line": "def confirmAuth( headers):\n"
        },
        {
            "code": "E501",
            "filename": "Testcases_Copilot/CWE-502/mitre_1.py",
            "line_number": 6,
            "column_number": 80,
            "text": "line too long (92 > 79 characters)",
            "physical_line": "    '''\n    get AuthToken from headers, decode it with base64, and load with cPickle to token object\n    check if the token is valid and return the data  in token object if it is valid\n    '''\n"
        },
        {
            "code": "E501",
            "filename": "Testcases_Copilot/CWE-502/mitre_1.py",
            "line_number": 7,
            "column_number": 80,
            "text": "line too long (83 > 79 characters)",
            "physical_line": "    '''\n    get AuthToken from headers, decode it with base64, and load with cPickle to token object\n    check if the token is valid and return the data  in token object if it is valid\n    '''\n"
        }
    ],
    "Testcases_Copilot/CWE-502/sonar_1.py": [
        {
            "code": "F821",
            "filename": "Testcases_Copilot/CWE-502/sonar_1.py",
            "line_number": 3,
            "column_number": 7,
            "text": "undefined name 'Flask'",
            "physical_line": "app = Flask(__name__)\n"
        },
        {
            "code": "E302",
            "filename": "Testcases_Copilot/CWE-502/sonar_1.py",
            "line_number": 5,
            "column_number": 1,
            "text": "expected 2 blank lines, found 1",
            "physical_line": "@app.route('/yaml')\n"
        }
    ]
}